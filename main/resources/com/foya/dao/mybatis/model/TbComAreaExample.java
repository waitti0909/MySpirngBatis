package com.foya.dao.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class TbComAreaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public TbComAreaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAREA_NAMEIsNull() {
            addCriterion("AREA_NAME is null");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMEIsNotNull() {
            addCriterion("AREA_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMEEqualTo(String value) {
            addCriterion("AREA_NAME =", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMENotEqualTo(String value) {
            addCriterion("AREA_NAME <>", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMEGreaterThan(String value) {
            addCriterion("AREA_NAME >", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("AREA_NAME >=", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMELessThan(String value) {
            addCriterion("AREA_NAME <", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMELessThanOrEqualTo(String value) {
            addCriterion("AREA_NAME <=", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMELike(String value) {
            addCriterion("AREA_NAME like", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMENotLike(String value) {
            addCriterion("AREA_NAME not like", value, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMEIn(List<String> values) {
            addCriterion("AREA_NAME in", values, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMENotIn(List<String> values) {
            addCriterion("AREA_NAME not in", values, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMEBetween(String value1, String value2) {
            addCriterion("AREA_NAME between", value1, value2, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andAREA_NAMENotBetween(String value1, String value2) {
            addCriterion("AREA_NAME not between", value1, value2, "AREA_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEIsNull() {
            addCriterion("CITY_NAME is null");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEIsNotNull() {
            addCriterion("CITY_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEEqualTo(String value) {
            addCriterion("CITY_NAME =", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMENotEqualTo(String value) {
            addCriterion("CITY_NAME <>", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEGreaterThan(String value) {
            addCriterion("CITY_NAME >", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("CITY_NAME >=", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMELessThan(String value) {
            addCriterion("CITY_NAME <", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMELessThanOrEqualTo(String value) {
            addCriterion("CITY_NAME <=", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMELike(String value) {
            addCriterion("CITY_NAME like", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMENotLike(String value) {
            addCriterion("CITY_NAME not like", value, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEIn(List<String> values) {
            addCriterion("CITY_NAME in", values, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMENotIn(List<String> values) {
            addCriterion("CITY_NAME not in", values, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMEBetween(String value1, String value2) {
            addCriterion("CITY_NAME between", value1, value2, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andCITY_NAMENotBetween(String value1, String value2) {
            addCriterion("CITY_NAME not between", value1, value2, "CITY_NAME");
            return (Criteria) this;
        }

        public Criteria andZIPIsNull() {
            addCriterion("ZIP is null");
            return (Criteria) this;
        }

        public Criteria andZIPIsNotNull() {
            addCriterion("ZIP is not null");
            return (Criteria) this;
        }

        public Criteria andZIPEqualTo(String value) {
            addCriterion("ZIP =", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPNotEqualTo(String value) {
            addCriterion("ZIP <>", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPGreaterThan(String value) {
            addCriterion("ZIP >", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPGreaterThanOrEqualTo(String value) {
            addCriterion("ZIP >=", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPLessThan(String value) {
            addCriterion("ZIP <", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPLessThanOrEqualTo(String value) {
            addCriterion("ZIP <=", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPLike(String value) {
            addCriterion("ZIP like", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPNotLike(String value) {
            addCriterion("ZIP not like", value, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPIn(List<String> values) {
            addCriterion("ZIP in", values, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPNotIn(List<String> values) {
            addCriterion("ZIP not in", values, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPBetween(String value1, String value2) {
            addCriterion("ZIP between", value1, value2, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZIPNotBetween(String value1, String value2) {
            addCriterion("ZIP not between", value1, value2, "ZIP");
            return (Criteria) this;
        }

        public Criteria andZONEIsNull() {
            addCriterion("ZONE is null");
            return (Criteria) this;
        }

        public Criteria andZONEIsNotNull() {
            addCriterion("ZONE is not null");
            return (Criteria) this;
        }

        public Criteria andZONEEqualTo(String value) {
            addCriterion("ZONE =", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotEqualTo(String value) {
            addCriterion("ZONE <>", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEGreaterThan(String value) {
            addCriterion("ZONE >", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEGreaterThanOrEqualTo(String value) {
            addCriterion("ZONE >=", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONELessThan(String value) {
            addCriterion("ZONE <", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONELessThanOrEqualTo(String value) {
            addCriterion("ZONE <=", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONELike(String value) {
            addCriterion("ZONE like", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotLike(String value) {
            addCriterion("ZONE not like", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEIn(List<String> values) {
            addCriterion("ZONE in", values, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotIn(List<String> values) {
            addCriterion("ZONE not in", values, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEBetween(String value1, String value2) {
            addCriterion("ZONE between", value1, value2, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotBetween(String value1, String value2) {
            addCriterion("ZONE not between", value1, value2, "ZONE");
            return (Criteria) this;
        }

        public Criteria andLEVELIsNull() {
            addCriterion("LEVEL is null");
            return (Criteria) this;
        }

        public Criteria andLEVELIsNotNull() {
            addCriterion("LEVEL is not null");
            return (Criteria) this;
        }

        public Criteria andLEVELEqualTo(Integer value) {
            addCriterion("LEVEL =", value, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELNotEqualTo(Integer value) {
            addCriterion("LEVEL <>", value, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELGreaterThan(Integer value) {
            addCriterion("LEVEL >", value, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELGreaterThanOrEqualTo(Integer value) {
            addCriterion("LEVEL >=", value, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELLessThan(Integer value) {
            addCriterion("LEVEL <", value, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELLessThanOrEqualTo(Integer value) {
            addCriterion("LEVEL <=", value, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELIn(List<Integer> values) {
            addCriterion("LEVEL in", values, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELNotIn(List<Integer> values) {
            addCriterion("LEVEL not in", values, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELBetween(Integer value1, Integer value2) {
            addCriterion("LEVEL between", value1, value2, "LEVEL");
            return (Criteria) this;
        }

        public Criteria andLEVELNotBetween(Integer value1, Integer value2) {
            addCriterion("LEVEL not between", value1, value2, "LEVEL");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated do_not_delete_during_merge Thu Sep 18 11:14:59 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_COM_AREA
     *
     * @mbggenerated Thu Sep 18 11:14:59 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}