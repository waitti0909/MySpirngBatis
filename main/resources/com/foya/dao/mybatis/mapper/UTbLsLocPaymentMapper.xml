<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foya.dao.mybatis.mapper.UTbLsLocPaymentMapper">

	<select id="getLsLocPaymentByLsNoVerLocId" resultType="com.foya.noms.dto.ls.TbLsLocPaymentDTO"
		parameterType="String">
		select
		a.LS_NO as LS_NO,
		a.LS_VER as LS_VER,
		a.LOCATION_ID as LOCATION_ID,
		a.PAYMENT_ITEM as PAYMENT_ITEM,
		a.LESSOR_ID as LESSOR_ID,
		a.RECIPIENT_ID as RECIPIENT_ID,
		a.LESSOR_NAME as LESSOR_NAME,
		a.RECIPIENT_NAME as RECIPIENT_NAME,
		a.LESSOR_RELATION as LESSOR_RELATION,
		a.PAYMENT_MODE as PAYMENT_MODE,
		a.UNIT_CODE as UNIT_CODE,
		a.SUB_UNIT_CODE as SUB_UNIT_CODE,
		a.ACCOUNT_NO as ACCOUNT_NO,
		a.BUSINESS_TAX as BUSINESS_TAX,
		a.PAY_ALOC as PAY_ALOC,
		a.PAY_AMT as PAY_AMT,
		a.EFF_DATE as EFF_DATE,
		a.END_DATE as END_DATE,
		a.FIRST_INCR as FIRST_INCR,
		a.BEFOR_INCR as BEFOR_INCR,
		a.INCR_AMOUNT as INCR_AMOUNT,
		a.NEXT_INCR as NEXT_INCR,
		a.RECIPIENT_ADDR as RECIPIENT_ADDR,
		a.RECP_ADDR_STD as RECP_ADDR_STD,
		a.CR_USER as CR_USER,
		a.CR_TIME as CR_TIME,
		a.MD_USER as MD_USER,
		a.MD_TIME as MD_TIME,
		b.PAYMENT_MODE as PAYMENT_MODE
		from TB_LS_LOC_PAYMENT as a
		left join
		TB_LS_LESSOR as b
		on
		a.LS_NO = b.LS_NO and a.LS_VER = b.LS_VER and  a.lessor_id=b.lessor_id
		where
		a.LS_NO =#{lsNo}
		
		<choose>
		    <when test="lsVer != null and lsVer != ''">
		      and a.ls_ver =#{lsVer} 
		    </when>
		    <otherwise>
		   	 and a.ls_ver = (Select max(CONVERT(INT, LS_VER)) from TB_LS_LOC_PAYMENT where ls_no = #{lsNo} and LOCATION_ID = #{locId})
		    </otherwise>
		</choose>
		
		<if test="locId!=null and locId!=''">
			and a.LOCATION_ID = #{locId}
		</if>
		
		<if test="itemType!=null and itemType!=''">
		
		    and a.PAYMENT_ITEM in 
		 <foreach close=")" collection="itemType" item="item" open="(" separator=",">
                    #{item}
          </foreach>
		</if>
	</select>
	
	
	<select id="getLsLocPaymentAddedByAppSeqLocId" resultType="com.foya.noms.dto.ls.TbLsLocPaymentDTO" parameterType="String">
		select a.app_seq,
		a.LS_NO as LS_NO,
		a.LS_VER as LS_VER,
		a.LOCATION_ID as LOCATION_ID,
		a.PAYMENT_ITEM as PAYMENT_ITEM,
		a.LESSOR_ID as LESSOR_ID,
		a.RECIPIENT_ID as RECIPIENT_ID,
		a.LESSOR_NAME as LESSOR_NAME,
		a.RECIPIENT_NAME as RECIPIENT_NAME,
		a.LESSOR_RELATION as LESSOR_RELATION,
		a.PAYMENT_MODE as PAYMENT_MODE,
		a.UNIT_CODE as UNIT_CODE,
		a.SUB_UNIT_CODE as SUB_UNIT_CODE,
		a.ACCOUNT_NO as ACCOUNT_NO,
		a.BUSINESS_TAX as BUSINESS_TAX,
		a.PAY_ALOC as PAY_ALOC,
		a.PAY_AMT as PAY_AMT,
		a.EFF_DATE as EFF_DATE,
		a.END_DATE as END_DATE,
		a.FIRST_INCR as FIRST_INCR,
		a.BEFOR_INCR as BEFOR_INCR,
		a.INCR_AMOUNT as INCR_AMOUNT,
		a.NEXT_INCR as NEXT_INCR,
		a.RECIPIENT_ADDR as RECIPIENT_ADDR,
		a.RECP_ADDR_STD as RECP_ADDR_STD,
		a.CR_USER as CR_USER,
		a.CR_TIME as CR_TIME,
		a.MD_USER as MD_USER,
		a.MD_TIME as MD_TIME,
		b.PAYMENT_MODE as PAYMENT_MODE
		from TB_LS_LOC_PAYMENT_ADDED as a
		left join
		TB_LS_LESSOR_ADDED as b
		on
		a.app_seq = b.app_seq and  a.lessor_id=b.lessor_id
		where
		a.app_seq =#{appSeq}
		
		<if test="locId!=null and locId!=''">
			and a.LOCATION_ID = #{locId}
		</if>
		
		<if test="itemType!=null and itemType!=''">
		
		    and a.PAYMENT_ITEM in 
		 <foreach close=")" collection="itemType" item="item" open="(" separator=",">
                    #{item}
          </foreach>
		</if>
	</select>
	
	
	
	<select id="searchTbLsLocPaymen" resultType="com.foya.noms.dto.ls.TbLsLocPaymentDTO" parameterType="String">
		Select
		a.LS_NO as LS_NO,
		a.LS_VER as LS_VER,
		a.LOCATION_ID as LOCATION_ID,
		a.PAYMENT_ITEM as PAYMENT_ITEM,
		a.LESSOR_ID as LESSOR_ID,
		a.RECIPIENT_ID as RECIPIENT_ID,
		a.LESSOR_NAME as LESSOR_NAME,
		a.RECIPIENT_NAME as RECIPIENT_NAME,
		a.LESSOR_RELATION as LESSOR_RELATION,
		a.PAYMENT_MODE as PAYMENT_MODE,
		a.ACCOUNT_NO as ACCOUNT_NO,
		a.BUSINESS_TAX as BUSINESS_TAX,
		a.PAY_ALOC as PAY_ALOC,
		a.PAY_AMT as PAY_AMT,
		a.EFF_DATE as EFF_DATE,
		a.END_DATE as END_DATE,
		a.FIRST_INCR as FIRST_INCR,
		a.BEFOR_INCR as BEFOR_INCR,
		a.INCR_AMOUNT as INCR_AMOUNT,
		a.NEXT_INCR as NEXT_INCR,
		a.RECIPIENT_ADDR as RECIPIENT_ADDR,
		a.RECP_ADDR_STD as RECP_ADDR_STD,
		a.CR_USER as CR_USER,
		a.CR_TIME as CR_TIME,
		a.MD_USER as MD_USER,
		a.MD_TIME as MD_TIME,
		a.UNIT_CODE as UNIT_CODE,
		a.SUB_UNIT_CODE as SUB_UNIT_CODE, 
		b.NAME as  paymentModeName,
		c.UNIT_NAME as UNIT_NAME,
		d.SUB_NAME as NICK_NAME
		from TB_LS_LOC_PAYMENT as a
		left join
		TB_SYS_LOOKUP as b
		on
		a.PAYMENT_MODE = b.CODE and b.TYPE = 'LS_PAYMENT_MODE'
		left join
		TB_LS_COLLECT_UNIT as c
		on
		a.UNIT_CODE = c.UNIT_CODE 
		left join
		TB_LS_COLLECT_UNIT_SUB as d
		on
		a.SUB_UNIT_CODE = d.SUB_UNIT_CODE and a.UNIT_CODE = d.UNIT_CODE
		
		where LS_VER=(Select max(CONVERT(INT, LS_VER)) from TB_LS_LOC_PAYMENT where PAYMENT_ITEM in 
		 <foreach close=")" collection="paymentItems" item="item" open="(" separator=",">
                    #{item}
          </foreach>
        and LS_NO = #{lsNo} and LOCATION_ID = #{locId}) 
		and LS_NO = #{lsNo}
		and LOCATION_ID = #{locId}
		and a.PAYMENT_ITEM in 
		 <foreach close=")" collection="paymentItems" item="item" open="(" separator=",">
                    #{item}
          </foreach>
	</select>
	
	<select id="getLsLocPaymentByLsNoVerLocIdLessorId" resultType="com.foya.noms.dto.ls.TbLsLocPaymentDTO" parameterType="hashmap">
		select
		a.LS_NO as LS_NO,
		a.LS_VER as LS_VER,
		a.LOCATION_ID as LOCATION_ID,
		a.PAYMENT_ITEM as PAYMENT_ITEM,
		a.LESSOR_ID as LESSOR_ID,
		a.RECIPIENT_ID as RECIPIENT_ID,
		a.LESSOR_NAME as LESSOR_NAME,
		a.RECIPIENT_NAME as RECIPIENT_NAME,
		a.LESSOR_RELATION as LESSOR_RELATION,
		a.PAYMENT_MODE as PAYMENT_MODE,
		a.UNIT_CODE as UNIT_CODE,
		a.SUB_UNIT_CODE as SUB_UNIT_CODE,
		a.ACCOUNT_NO as ACCOUNT_NO,
		a.BUSINESS_TAX as BUSINESS_TAX,
		a.PAY_ALOC as PAY_ALOC,
		a.PAY_AMT as PAY_AMT,
		a.EFF_DATE as EFF_DATE,
		a.END_DATE as END_DATE,
		a.FIRST_INCR as FIRST_INCR,
		a.BEFOR_INCR as BEFOR_INCR,
		a.INCR_AMOUNT as INCR_AMOUNT,
		a.NEXT_INCR as NEXT_INCR,
		a.RECIPIENT_ADDR as RECIPIENT_ADDR,
		a.RECP_ADDR_STD as RECP_ADDR_STD,
		a.CR_USER as CR_USER,
		a.CR_TIME as CR_TIME,
		a.MD_USER as MD_USER,
		a.MD_TIME as MD_TIME,
		b.PAYMENT_MODE as PAYMENT_MODE
		from TB_LS_LOC_PAYMENT as a
		left join
		TB_LS_LESSOR as b
		on
		a.LS_NO = b.LS_NO and a.LS_VER = b.LS_VER and  a.lessor_id=b.lessor_id
		where
		a.LS_NO =#{lsNo}
		
		<choose>
		    <when test="lsVer != null and lsVer != ''">
		      and a.ls_ver =#{lsVer} 
		    </when>
		    <otherwise>
		   	 and a.ls_ver = (Select max(CONVERT(INT, LS_VER)) from TB_LS_LOC_PAYMENT where ls_no = #{lsNo})
		    </otherwise>
		</choose>
		
		<if test="locId!=null and locId!=''">
			and a.LOCATION_ID = #{locId}
		</if>
		
		<if test="lessorId!=null and  lessorId!=''">
		    and a.lessor_id= #{lessorId}
		</if>
		
		<if test="itemType!=null and itemType!=''">
		
		    and a.PAYMENT_ITEM in 
		 <foreach close=")" collection="itemType" item="item" open="(" separator=",">
                    #{item}
          </foreach>
		</if>
	</select>
	
	
	  <select id="sumPayamtgroupbyPaymentItem" parameterType="String" resultType="com.foya.dao.mybatis.model.TbLsLocPayment">
 SELECT
	TEMP.PAYMENT_ITEM AS PAYMENT_ITEM,
	TEMP.LOCATION_ID AS LOCATION_ID,
	SUM (TEMP.PAY_AMT) AS PAY_AMT
FROM
	(
		SELECT
			LS_NO,
			LS_VER,
			PAYMENT_ITEM,
			LOCATION_ID,
			CASE
		WHEN SUM (PAY_AMT) IS NULL THEN
			'0'
		ELSE
			SUM (PAY_AMT)
		END AS PAY_AMT
		FROM
			TB_LS_LOC_PAYMENT
     WHERE　ls_No = #{lsNo} and ls_Ver= #{lsVer} and location_Id = #{locationId}
		GROUP BY
			LS_NO,
			LS_VER,
			PAYMENT_ITEM,
			PAY_ALOC,
			LOCATION_ID
	) TEMP
GROUP BY
	TEMP.PAYMENT_ITEM,
	TEMP.LOCATION_ID
   </select>
   
     <select id="sumPayalocgroupbylocationId" parameterType="String" resultType="com.foya.dao.mybatis.model.TbLsLocPayment">
	SELECT
	LOCATION_ID,
	CASE
WHEN SUM (PAY_ALOC) IS NULL THEN
	'0'
ELSE
	SUM (PAY_ALOC)
END AS PAY_ALOC
FROM
	TB_LS_LOC_PAYMENT
	 WHERE　ls_No = #{lsNo} and ls_Ver= #{lsVer} 
      GROUP BY LOCATION_ID
   
   </select>


	<select id ="selectTblslocpaymentMaxVer" parameterType="String" resultType="com.foya.dao.mybatis.model.TbLsLocPayment">
SELECT
	MAX (TEMP.LS_VER) AS LS_VER
FROM
	(
		SELECT
			CONVERT (INT, LS_VER) AS LS_VER
		FROM
			TB_LS_LOC_PAYMENT
		WHERE
			LS_NO = #{ lsNo }
			<if test="locationId!=null and locationId!=''">
			AND LOCATION_ID = #{locationId}
			</if>
	) TEMP

	</select>
	
	<select id="queryPaymentAmtByLocItem" resultType="java.lang.Integer" parameterType="hashmap">
		select
		ISNULL(SUM(ISNULL(PAY_AMT,0)),0)
		FROM TB_LS_LOC_PAYMENT
		WHERE
		LS_NO =#{lsNo}
		AND ls_ver = (Select max(CONVERT(INT, LS_VER)) from TB_LS_LOC_PAYMENT where ls_no = #{lsNo})		
		AND LOCATION_ID = #{locId}
		AND lessor_id= #{lessorId}
		AND PAYMENT_ITEM = #{item}
	</select>

</mapper>